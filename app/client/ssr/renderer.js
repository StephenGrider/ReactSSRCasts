import React from 'react';
import { renderToString } from 'react-dom/server';
import { StaticRouter } from 'react-router-dom';
import { Provider } from 'react-redux';
import { Helmet } from 'react-helmet';
import config from 'config';
import { ChunkExtractor } from '@loadable/server';
import path from 'path';
import rowStateGen from '~app/util/base/initialStateGenerator';
import App from '../App';
import { AppConfig } from '@reactmono/framework-registry';
import { ConnectedRouter } from 'connected-react-router';

export default (req, store, context, history) => {
    let useSSR = config.get('useSSR');
    const clientPath = AppConfig.get('clientPath');
    let stylesPath = `/styles/${config.get('design.client')}/styles.css`;

    const app = (
        <Provider store={store}>
            <ConnectedRouter history={history}>
                <StaticRouter basename={clientPath} location={req.path} context={context}>
                    <App />
                </StaticRouter>
            </ConnectedRouter>
        </Provider>
    );

    // This is the stats file generated by webpack loadable plugin
    const statsFile = path.resolve('./public/client/loadable-stats.json');
    // We create an extractor from the statsFile
    const extractor = new ChunkExtractor({ statsFile, publicPath: '/client' });
    // Wrap your application using "collectChunks"
    const jsx = extractor.collectChunks(app);

    // Render your application
    let content = '';
    try {
        content = useSSR ? renderToString(jsx) : '';
    } catch (err) {
        console.error(err);
    }

    const helmet = Helmet.renderStatic();

    const initialState = useSSR
        ? rowStateGen(store.getState())
        : rowStateGen({});

    const linkTags = extractor.getLinkTags();
    const styleTags = extractor.getStyleTags();
    const scriptTags = extractor.getScriptTags();

    return `
        <html>
            <head>
                ${helmet.title.toString()}
                ${helmet.meta.toString()}
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
                <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
                <link rel="stylesheet" href="${stylesPath}">
                ${linkTags}
                ${styleTags}
            </head>
            <body>
                <div id="root">${content}</div>
                ${initialState}
                ${scriptTags}
            </body>
        </html>
    `;
};
